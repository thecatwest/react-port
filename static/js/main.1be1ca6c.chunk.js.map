{"version":3,"sources":["utils/helpers.js","components/Nav/index.js","assets/cover/cover-image.jpg","components/About/index.js","components/Header/index.js","components/Contact/index.js","components/Footer/index.js","components/Project/index.js","components/Portfolio/index.js","components/Resume/index.js","App.js","serviceWorker.js","index.js"],"names":["capitalizeFirstLetter","string","charAt","toUpperCase","slice","Nav","props","categories","setCurrentCategory","contactSelected","currentCategory","setContactSelected","useEffect","document","title","name","className","href","role","onClick","map","category","About","id","src","coverImage","style","width","alt","Header","ContactCard","htmlFor","type","rows","Footer","Project","image","github","link","description","Portfolio","project","Resume","App","useState","Contact","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"wKAAO,SAASA,EAAsBC,GACpC,OAAOA,EAAOC,OAAO,GAAGC,cAAgBF,EAAOG,MAAM,G,WCuDxCC,MArDf,SAAaC,GACX,MAMIA,EALFC,kBADF,MACe,GADf,EAEEC,EAIEF,EAJFE,mBACAC,EAGEH,EAHFG,gBACAC,EAEEJ,EAFFI,gBACAC,EACEL,EADFK,mBAOF,OAJAC,qBAAU,WACRC,SAASC,MAAQd,EAAsBU,EAAgBK,QACtD,CAACL,IAGF,yBAAQM,UAAU,gBAAlB,UACE,6BACE,oBAAG,cAAY,OAAOC,KAAK,IAA3B,UACE,sBAAMC,KAAK,MAAM,aAAW,aAA5B,2BADF,sBAIF,8BACE,qBAAIF,UAAU,WAAd,UACE,oBAAIA,UAAU,OAAd,SACE,mBAAG,cAAY,QAAQC,KAAK,SAASE,QAAS,kBAAMR,GAAmB,IAAvE,wBAIF,oBAAIK,UAAS,eAAUP,GAAmB,aAA1C,SACE,sBAAMU,QAAS,kBAAMR,GAAmB,IAAxC,uBAEDJ,EAAWa,KAAI,SAACC,GAAD,OACd,oBACEL,UAAS,eACPN,EAAgBK,OAASM,EAASN,OAASN,GAAmB,aAFlE,SAME,sBACEU,QAAS,WACPX,EAAmBa,GACnBV,GAAmB,IAHvB,SAMGX,EAAsBqB,EAASN,SAR7BM,EAASN,kBCtCb,MAA0B,wCCiB1BO,MAdf,WACE,OACE,0BAASN,UAAU,OAAnB,UACE,oBAAIO,GAAG,QAAP,uBACA,qBACEC,IAAKC,EACLT,UAAU,OACVU,MAAO,CAAEC,MAAO,QAChBC,IAAI,cCDGC,MARf,WACI,OACI,4BCwBOC,MAxBf,WACI,OACE,oCACE,oEACA,uBAAMP,GAAG,eAAT,UACE,gCACE,uBAAOQ,QAAQ,OAAf,mBACA,uBAAOC,KAAK,OAAOjB,KAAK,YAE1B,gCACE,uBAAOgB,QAAQ,QAAf,oBACA,uBAAOC,KAAK,QAAQjB,KAAK,aAE3B,gCACE,uBAAOgB,QAAQ,UAAf,+BACA,0BAAUhB,KAAK,UAAUkB,KAAK,SAEhC,wBAAQD,KAAK,SAAb,yBCPKE,MAZf,WACE,OACE,+BACE,yBAAQjB,KAAK,4CAAb,UACG,IADH,cAIA,wBAAQA,KAAK,gCAAb,yBCUSkB,MAff,YAA6D,IAA1CC,EAAyC,EAAzCA,MAAOtB,EAAkC,EAAlCA,MAAOuB,EAA2B,EAA3BA,OAAQC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,YAC3C,OACF,sBAAKvB,UAAU,OAAOU,MAAO,CAACC,MAAO,SAArC,UACA,qBAAKH,IAAKY,EAAOpB,UAAU,eAAeY,IAAI,QAC9C,sBAAKZ,UAAU,YAAf,UACE,oBAAIA,UAAU,aAAd,SAA4BF,IAC5B,mBAAGE,UAAU,YAAb,SAA0BuB,IAC1B,mBAAGtB,KAAMqB,EAAMtB,UAAU,kBAAzB,kBAHF,KAIE,mBAAGC,KAAMoB,EAAQrB,UAAU,kBAA3B,iCC6CWwB,MApDf,WAmCE,OACE,8BAnCgB,CAChB,CACEjB,GAAI,EACJT,MAAO,eACPwB,KAAM,8CACND,OAAQ,gDACRD,MAAO,sCACPG,YAAa,gLAEf,CACEhB,GAAI,EACJT,MAAO,gBACPwB,KAAM,kDACND,OAAQ,kDACRD,MAAO,0CACPG,YAAa,iEAEf,CACEhB,GAAI,EACJT,MAAO,eACPwB,KAAM,kDACND,OAAQ,gDACRD,MAAO,uCACPG,YAAa,2FAEf,CACEhB,GAAI,EACJT,MAAO,gBACPwB,KAAM,kDACND,OAAQ,kDACRD,MAAO,0CACPG,YAAa,kEAKFnB,KAAI,SAACqB,GAAD,OACb,cAAC,EAAD,CACElB,GAAIkB,EAAQlB,GACZT,MAAO2B,EAAQ3B,MACfwB,KAAMG,EAAQH,KACdD,OAAQI,EAAQJ,OAChBD,MAAOK,EAAQL,MACfG,YAAaE,EAAQF,aAChBE,EAAQlB,UCnCRmB,MAZf,WAEE,OACE,gCACE,wCACA,kIACA,2HAA6F,+BAAM,mBAAGzB,KAAK,4CAAR,+BC4C1F0B,MAzCf,WACE,MAAqBC,mBAAS,CAC5B,CACE7B,KAAM,QACNwB,YAAa,iCAEf,CAAExB,KAAM,UAAWwB,YAAa,gBAChC,CAAExB,KAAM,YAAawB,YAAa,qBAClC,CAAExB,KAAM,SAAUwB,YAAa,iCAP1BhC,EAAP,oBAUA,EAA8CqC,mBAASrC,EAAW,IAAlE,mBAAOG,EAAP,KAAwBF,EAAxB,KAEA,EAA8CoC,oBAAS,GAAvD,mBAAOnC,EAAP,KAAwBE,EAAxB,KAEA,OACE,gCACE,cAAC,EAAD,IACA,cAAC,EAAD,CACEJ,WAAYA,EACZC,mBAAoBA,EACpBE,gBAAiBA,EACjBD,gBAAiBA,EACjBE,mBAAoBA,IAEtB,+BACIF,EAOA,cAACoC,EAAD,IANA,qCACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAWnC,gBAAiBA,IAC5B,cAAC,EAAD,SAMN,cAAC,EAAD,QCpCcoC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFxC,SAASyC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.1be1ca6c.chunk.js","sourcesContent":["export function capitalizeFirstLetter(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nexport function validateEmail(email) {\n  var re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(String(email).toLowerCase());\n}","import React, { useEffect } from 'react';\nimport { capitalizeFirstLetter } from '../../utils/helpers';\n\nfunction Nav(props) {\n  const {\n    categories = [],\n    setCurrentCategory,\n    contactSelected,\n    currentCategory,\n    setContactSelected,\n  } = props;\n\n  useEffect(() => {\n    document.title = capitalizeFirstLetter(currentCategory.name);\n  }, [currentCategory]);\n\n  return (\n    <header className=\"flex-row px-1\">\n      <h2>\n        <a data-testid=\"link\" href=\"/\">\n          <span role=\"img\" aria-label=\"light-bulb\"> ðŸ’¡</span> Catwest.codes\n        </a>\n      </h2>\n      <nav>\n        <ul className=\"flex-row\">\n          <li className=\"mx-2\">\n            <a data-testid=\"about\" href=\"#about\" onClick={() => setContactSelected(false)}>\n              About me\n            </a>\n          </li>\n          <li className={`mx-2 ${contactSelected && 'navActive'}`}>\n            <span onClick={() => setContactSelected(true)}>Contact</span>\n          </li>\n          {categories.map((category) => (\n            <li\n              className={`mx-1 ${\n                currentCategory.name === category.name && !contactSelected && 'navActive'\n                }`}\n              key={category.name}\n            >\n              <span\n                onClick={() => {\n                  setCurrentCategory(category);\n                  setContactSelected(false);\n                }}\n              >\n                {capitalizeFirstLetter(category.name)}\n              </span>\n            </li>\n          ))}\n        </ul>\n      </nav>\n    </header>\n  );\n}\n\nexport default Nav;","export default __webpack_public_path__ + \"static/media/cover-image.0b80721c.jpg\";","import React from \"react\";\nimport coverImage from \"../../assets/cover/cover-image.jpg\";\n\nfunction About() {\n  return (\n    <section className=\"my-5\">\n      <h1 id=\"about\">about Cat</h1>\n      <img\n        src={coverImage}\n        className=\"my-2\"\n        style={{ width: \"100%\" }}\n        alt=\"cover\"\n      />\n    </section>\n  );\n}\n\nexport default About;\n","import React from \"react\";\n\nfunction Header(){\n    return (\n        <header>\n        </header>\n    )\n}\n\n\nexport default Header;","import React from \"react\";\n\n\n\nfunction ContactCard(){\n    return (\n      <section>\n        <h1>Want to work together? Let's chat!</h1>\n        <form id=\"contact-form\">\n          <div>\n            <label htmlFor=\"name\">name:</label>\n            <input type=\"text\" name=\"name\" />\n          </div>\n          <div>\n            <label htmlFor=\"email\">email:</label>\n            <input type=\"email\" name=\"email\" />\n          </div>\n          <div>\n            <label htmlFor=\"message\">tell me about it:</label>\n            <textarea name=\"message\" rows=\"5\" />\n          </div>\n          <button type=\"submit\">Send</button>\n        </form>\n      </section>\n    );\n}\n\n\nexport default ContactCard","import React from \"react\";\n\nfunction Footer() {\n  return (\n    <h1>\n      <button href=\"https://www.linkedin.com/in/catawestover/\">\n        {\" \"}\n        Linkedin\n      </button>\n      <button href=\"https://github.com/TheCatWest\">Github </button>\n    </h1>\n  );\n}\n\nexport default Footer;\n","import React from \"react\";\n// import Portfolio from \"../Portfolio/index\"\n\n\nfunction Project({ image, title, github, link, description}){\n    return ( \n  <div className=\"card\" style={{width: \"18rem\"}}>\n  <img src={image} className=\"card-img-top\" alt=\"...\"/>\n  <div className=\"card-body\">\n    <h5 className=\"card-title\">{title}</h5>\n    <p className=\"card-text\">{description}</p>\n    <a href={link} className=\"btn btn-primary\">Live</a> |\n    <a href={github} className=\"btn btn-primary\"> Github Repo</a>\n  </div>\n</div>    \n    );\n}\n\n\nexport default Project;\n","import Project from \"../Project\";\nimport React from \"react\";\n\n\n\nfunction Portfolio() {\n  const portfolio = [\n    {\n      id: 1,\n      title: \"The Gun Show\",\n      link: \"https://thawing-plains-49978.herokuapp.com/\",\n      github: \"https://github.com/thecatwest/JustTechGunShow\",\n      image: \"../../assets/portfolio/gun-show.png\",\n      description: \"A social media app designed specifically with workouts in mind. Users can connect with other clients, create workout routines to share, and comment on other posts by users.\"\n    },\n    {\n      id: 2,\n      title: \"Daily Planner\",\n      link: \"https://thecatwest.github.io/weather-dashboard/\",\n      github: \"https://github.com/thecatwest/weather-dashboard\",\n      image: \"../../assets/portfolio/weather-dash.png\",\n      description: \"An app that allows users to search the local weather by city.\"\n    },\n    {\n      id: 3,\n      title: \"Trade Secret\",\n      link: \"http://shawnlittrel-trade-secret.herokuapp.com/\",\n      github: \"https://github.com/thecatwest/JustTechGunShow\",\n      image: \"../../assets/portfolio/crm-tools.png\",\n      description: \"A CRM tool that allows companies to control their service calls, etc from a single app.\"\n    },\n    {\n      id: 4,\n      title: \"Daily Planner\",\n      link: \"https://thecatwest.github.io/weather-dashboard/\",\n      github: \"https://github.com/thecatwest/weather-dashboard\",\n      image: \"../../assets/portfolio/weather-dash.png\",\n      description: \"An app that allows users to search the local weather by city.\"\n    },\n  ];\n  return (\n    <div>\n      {portfolio.map((project) => (\n        <Project\n          id={project.id}\n          title={project.title}\n          link={project.link}\n          github={project.github}\n          image={project.image}\n          description={project.description}\n          key={project.id}\n        />\n      ))}\n    </div>\n  );\n}\n\nexport default Portfolio;\n","\nimport React from \"react\";\n\nfunction Resume() {\n\n  return (\n    <div>\n      <h1>Resume</h1>\n      <p>Hi there, I'm Cat Westover, and this is my portfolio site, catwest.codes. Thanks for stopping by.</p>\n      <p>Please visit my LinkedIn profile to view my professional and educational accomplishments: <span><a href=\"https://www.linkedin.com/in/catawestover/\">LinkedIn</a></span></p>\n\n    </div>\n  );\n}\n\nexport default Resume;\n","// import \"./App.css\";\nimport React, { useState } from 'react';\n// import React from \"react\";\nimport Nav from \"./components/Nav/index\";\n// import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport About from \"./components/About/index\";\nimport Header from \"./components/Header/index\";\nimport ContactCard from \"./components/Contact/index\";\nimport Footer from \"./components/Footer/index\";\nimport Portfolio from \"./components/Portfolio/index\";\nimport Resume from \"./components/Resume/index\"\n\nfunction App() {\n  const [categories] = useState([\n    {\n      name: 'about',\n      description: 'About your host, Cat Westover',\n    },\n    { name: 'contact', description: 'Contact info' },\n    { name: 'portfolio', description: 'Peep my portfolio' },\n    { name: 'resume', description: 'Send my resume to your boss' },\n  ]);\n\n  const [currentCategory, setCurrentCategory] = useState(categories[0]);\n\n  const [contactSelected, setContactSelected] = useState(false);\n\n  return (\n    <div>\n      <Header />\n      <Nav\n        categories={categories}\n        setCurrentCategory={setCurrentCategory}\n        currentCategory={currentCategory}\n        contactSelected={contactSelected}\n        setContactSelected={setContactSelected}\n      ></Nav>\n      <main>\n        {!contactSelected ? (\n          <>\n            <About></About>\n            <Portfolio currentCategory={currentCategory}></Portfolio>\n            <Resume />\n          </>\n        ) : (\n          <ContactCard></ContactCard>\n        )}\n      </main>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}